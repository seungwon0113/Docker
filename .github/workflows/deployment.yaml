# workflow 이름
name: docker-deploy

# 지정 브랜치에서 push 또는 PR 발생 시 action 실행
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# 작업
jobs:
  # 배포
  deploy:
    # 서버를 실행할 환경(Ubuntu)
    runs-on: ubuntu-latest
    # Git Action 환경변수 이름
    environment: AWS
    # 작업 단계
    steps:
      # 도커 멀티 플랫폼(amd64,arm64 등) 빌드를 위한 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # 로컬 환경에서 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      # 도커 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest

      - name: EC2 ssh connection and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}  # 연결할 EC2 
          username: ${{ secrets.SSH_USERNAME }}	 # 사용자
          key: ${{ secrets.SSH_KEY }}  # pem 파일 내용
          command_timeout: 5m	 #timeout 시간 설정
          script: |
            script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
            
